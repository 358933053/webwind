#summary 使用模板

= 使用模板 =

作为示例，可以直接返回一个简单的HTML如`<html><body>Hello, world!</body></html>`。不过，在真实世界中，复杂的Web页面通常由各种模板引擎生成。WebWind内置支持两种模板引擎：JSP和[http://velocity.apache.org/ Velocity]。

在WebWind中渲染一个模板是非常简单的：

  # 将所有数据放入`Map<String, Object>`中作为模型；
  # 创建一个TemplateRenderer并返回。

参考下面的例子：

{{{
public class IndexPage {

    @Mapping("/")
    public Renderer index() {
        Map<String, Object> model = new HashMap<String, Object>();
        model.put("name", "Michael");
        model.put("date", new Date());
        return new TemplateRenderer("/index.jsp", model);
    }
}
}}}

如果没有配置任何模板，缺省的模板引擎是JSP。例如，上面的代码对应的模板`index.jsp`的内容看起来像这样：

{{{
<html>
<body>
  Hello, <%=request.getAttribute("name") %>!
  It is <%=request.getAttribute("date") %>!
</body>
</html>
}}}

如果使用Velocity作为模板，需要准备一个Velocity模板文件，例如，`index.htm`：

{{{
<html>
<body>
  Hello, ${name}! It is ${date.toString()}!
</body>
</html>
}}}

参考[DeveloperConfig 配置]以获得更多关于Velocity的配置信息。

= 需要支持更多模板引擎 =

如果你需要使用除JSP和Velocity之外的其他模板，你需要更多的工作。

WebWind允许你使用任何模板引擎（例如[http://freemarker.org/ FreeMarker]等），通过编写自定义的`TemplateFactory`来实现。例如：

{{{
package sample;

import org.expressme.wind.template.ContainerFactory;

public class MyTemplateFactory implements TemplateFactory {

    public Template loadTemplate(String path) throws Exception {
        return new MyTemplate(path);
    }

    public void init(Config config) {
        // TODO: init your template engine here...
    }
}
}}}

你需要实现以上两个方法。对于有经验的开发人员来说这很容易。参考[http://code.google.com/p/express-me/source/browse/trunk/ExpressWind/src/org/expressme/wind/template/JspTemplateFactory.java JspTemplateFactory.java]和[http://code.google.com/p/express-me/source/browse/trunk/ExpressWind/src/org/expressme/wind/template/VelocityTemplateFactory.java VelocityTemplateFactory.java]作为示例。

还需要实现`MyTemplate`类，并且从`Template`派生：

{{{
package sample;

import java.io.PrintWriter;
import java.util.Map;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.expressme.wind.template.Template;

public class MyTemplate implements Template {

    private String path;

    public MyTemplate(String path) {
        this.path = path;
    }

    public void render(HttpServletRequest request, HttpServletResponse response, Map<String, Object> model) throws Exception {
        String content = build_content_by_template(model);
        PrintWriter pw = response.getWriter();
        pw.write(content);
        pw.flush();
    }
}
}}}

在`web.xml`中声明你的TemplateFactory的完整类名：

{{{
<init-param>
    <param-name>template</param-name>
    <param-value>sample.MyTemplateFactory</param-value>
</init-param>
}}}
