#summary 编写'Hello, world'应用

= Hello, world =

WebWind版本的'Hello, world'非常简单：

{{{
import org.expressme.webwind.Mapping;

public class MyPage {

    @Mapping("/hello")
    public String hello() {
        return "<h1>Hello, world</h1>";
    }
}
}}}

注意到不需要任何框架提供的如Action或Controller之类的接口。URL映射通过Java 5的注解直接定义在方法上。

确保该JavaBean被你的IoC容器管理。启动Web服务器就可以在浏览器中看到如下Web页面：

http://webwind.googlecode.com/svn/wiki/Hello.png

= 传递参数 =

让我们做一个小小的扩展，让这个应用程序能向所有人说'Hello'。你可以直接在URL后添加一个参数，例如，`/hello?name=michael`，并在旧式的MVC框架中处理参数。不过，`/hello/michael`这样的URL看起来是不是更简单：

{{{
@Mapping("/hello/$1")
public String hello(String name) {
    return "<h1>Hello, " + name + "</h1>";
}
}}}

现在，Web页面显示如下：

http://webwind.googlecode.com/svn/wiki/HelloMichael.png

你也许已经猜到了，URL中的`$1`将被自动赋值到方法`hello(String)`的第一个参数`name`变量中。完全正确！

以上两个方法还可以合并到一起，不会产生冲突：

{{{
import org.expressme.webwind.Mapping;

public class MyPage {

    @Mapping("/hello")
    public String hello() {
        return "<h1>Hello, world</h1>";
    }

    @Mapping("/hello/$1")
    public String hello(String name) {
        return "<h1>Hello, " + name + "</h1>";
    }
}
}}}

让我们继续深入[DeveloperMapping 如何映射URL]。
