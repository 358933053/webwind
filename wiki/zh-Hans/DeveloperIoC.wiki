#summary 选择IoC容器

= 选择IoC容器 =

正如我们讨论过的，WebWind从不管理任何Web组件，而是向IoC容器请求所有实例。WebWind内置支持两种IoC容器：[http://code.google.com/p/google-guice/ Guice]和[http://www.springsource.org/ Spring]。

所有被IoC容器管理的组件都将被自动扫描，并提取标记有@Mapping的public方法。例如，定义带有两个URL映射的方法的类：

{{{
public class Blog {

    @Mapping("/hello/$1")
    public String hello(String name) {
        return "<h1>Hello, " + name + "</h1>";
    }

    @Mapping("/")
    public Renderer index() throws Exception {
        return new TemplateRenderer("/index.htm");
    }
}
}}}

IoC容器中JavaBean的生命周期可以为Singleton或Prototype，不过要确保其是无状态的，而WebWind总是以Singleton模式持有这些Bean的实例。

= 使用Guice =

如果你使用Guice作为IoC容器，则需要在`web.xml`中指定Module类：

{{{
<init-param>
    <param-name>modules</param-name>
    <param-value>org.expressme.sample.BlogModule</param-value>
</init-param>
}}}

参考[DeveloperConfig 配置]以获得更多关于Guice的配置信息。

编写Module类：

{{{
public class BlogModule implements Module {
    public void configure(Binder binder) {
        binder.bind(Blog.class).asEagerSingleton();
    }
}
}}}

= 使用Spring =

如果你使用Spring作为IoC容器，则需要在Spring的配置文件（通常是`applicationContext.xml`）中定义Bean：

{{{
<bean class="org.expressme.sample.Blog" />
}}}

参考[DeveloperConfig 配置]以获得更多关于Spring的配置信息。

= 需要支持更多IoC容器 =

如果你想使用除了Guice和Spring的其他IoC容器，你需要做更多的工作。

WebWind允许你使用任何IoC容器（例如[http://hivemind.apache.org/ HiveMind]，[http://www.picocontainer.org/ PicoContainer]等），通过编写自定义的ContainerFactory来实现，例如：

{{{
package sample;

import java.util.List;
import org.expressme.wind.container.ContainerFactory;

public class MyContainerFactory implements ContainerFactory {
    public List<Object> findAllBeans() throws ServletException {
        // TODO: return all objects managed by IoC container
    }

    public void init(Config config) throws ServletException {
        // TODO: init or find IoC container instance
    }
}
}}}

你必须实现以上两个方法。对于有经验的开发人员来说很容易，请参考[http://code.google.com/p/express-me/source/browse/trunk/ExpressWind/src/org/expressme/wind/container/SpringContainerFactory.java SpringContainerFactory.java]和[http://code.google.com/p/express-me/source/browse/trunk/ExpressWind/src/org/expressme/wind/container/GuiceContainerFactory.java GuiceContainerFactory.java]作为示例。

然后在`web.xml`中声明自定义ContainerFactory的完整类名：

{{{
<init-param>
    <param-name>container</param-name>
    <param-value>sample.MyContainerFactory</param-value>
</init-param>
}}}
